Subesquema detallado por feature
üîπ Feature 1 ‚Äì Dynamic Greeting (seg√∫n hora del d√≠a)

Objetivo: Mostrar ‚ÄúGood morning / Good afternoon / Good evening‚Äù en lugar de un saludo fijo.

C√≥digo:

Editar HelloController.kt ‚Üí l√≥gica en el m√©todo que devuelve el saludo.

Usar LocalTime.now() para decidir el mensaje.

Vista (opcional):

En welcome.html, mostrar el saludo din√°mico.

Test:

A√±adir un unit test sencillo en HelloControllerUnitTests.kt simulando diferentes horas.

Documentaci√≥n (REPORT.md):

Description of Changes: explicar c√≥mo se a√±adi√≥ la l√≥gica de hora.

Technical Decisions: justificar uso de LocalTime en vez de hardcode.

üîπ Feature 2 ‚Äì Multi-language Support (i18n)

Objetivo: Permitir que la app muestre mensajes en ingl√©s o espa√±ol seg√∫n configuraci√≥n/usuario.

C√≥digo:

Crear messages.properties (en ingl√©s, por defecto).

Crear messages_es.properties (traducci√≥n al espa√±ol).

Configurar application.properties para habilitar i18n (spring.messages.basename=messages).

En HelloController.kt, usar MessageSource para recuperar los textos seg√∫n idioma.

Vista:

En welcome.html, mostrar saludo traducido.

Opcional: bot√≥n o link para cambiar idioma (?lang=es).

Test:

A√±adir prueba que verifique que al llamar al endpoint con Accept-Language: es responde en espa√±ol.

Documentaci√≥n (REPORT.md):

Description of Changes: explicar c√≥mo se implement√≥ i18n.

Technical Decisions: por qu√© usar archivos messages_xx.properties.

üîπ Feature 3 ‚Äì Greeting History

Objetivo: Guardar todos los saludos generados y mostrarlos en API y (opcionalmente) en web.

C√≥digo:

Crear HistoryService.kt ‚Üí almacena en una lista los saludos (name, timestamp).

Modificar HelloController.kt ‚Üí cada vez que se saluda, a√±adir entrada al hist√≥rico.

Nuevo endpoint /api/history que devuelva el listado en JSON.

Vista (opcional):

Crear history.html con Thymeleaf ‚Üí mostrar hist√≥rico en tabla.

Test:

Unit test que verifique que el hist√≥rico crece al hacer varias peticiones.

Integration test que consuma /api/history y devuelva JSON v√°lido.

Documentaci√≥n (REPORT.md):

Description of Changes: detallar el nuevo servicio y endpoint.

Technical Decisions: explicar que se us√≥ memoria en vez de base de datos para simplificar.

üìå Resumen del flujo de trabajo

Crear rama ‚Üí implementar feature ‚Üí testear ‚Üí documentar ‚Üí commit ‚Üí push.

Completar la secci√≥n correspondiente en REPORT.md.

Actualizar README.md con endpoints nuevos.